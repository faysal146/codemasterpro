{"version":3,"file":"component---src-templates-categories-jsx-29ffb0241b72899c63c9.js","mappings":"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","sources":["webpack://codemaster/./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack://codemaster/./node_modules/gatsby-plugin-anchor-links/index.js","webpack://codemaster/./src/components/codemaster/pagination.jsx","webpack://codemaster/./src/components/courses/post-flat.jsx","webpack://codemaster/./src/templates/categories.jsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","import React from 'react';\nimport { Link } from 'gatsby';\nimport { AnchorLink } from 'gatsby-plugin-anchor-links';\n\nconst pagClasss =\n    'cursor-pointer p-2 bg-gray-700 rounded text-green-300 inline-flex items-center justify-center w-11 shadow-md hover:bg-green-400 hover:text-gray-200 transition-all duration-150 ease-in-out';\n\nconst disabledPag =\n    'p-2 bg-gray-700 rounded text-green-300 inline-flex items-center justify-center w-11 shadow-md opacity-70';\n\nconst activeClass =\n    'p-2 rounded inline-flex items-center justify-center w-11 shadow-md bg-green-400 text-gray-200';\n\nconst PaginationLink = function ({ hasNextPage }) {\n    if (hasNextPage) {\n        return (\n            <Link className={pagClasss} to={hasNextPage}>\n                {' '}\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"-5 -5 24 24\"\n                    width=\"24\"\n                    fill=\"currentColor\"\n                >\n                    <path d=\"M10.586 5.657l-3.95-3.95A1 1 0 0 1 8.05.293l5.657 5.657a.997.997 0 0 1 0 1.414L8.05 13.021a1 1 0 1 1-1.414-1.414l3.95-3.95H1a1 1 0 1 1 0-2h9.586z\" />\n                </svg>{' '}\n            </Link>\n        );\n    }\n    return (\n        <span className={disabledPag}>\n            {' '}\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"-5 -5 24 24\"\n                width=\"24\"\n                fill=\"currentColor\"\n            >\n                <path d=\"M10.586 5.657l-3.95-3.95A1 1 0 0 1 8.05.293l5.657 5.657a.997.997 0 0 1 0 1.414L8.05 13.021a1 1 0 1 1-1.414-1.414l3.95-3.95H1a1 1 0 1 1 0-2h9.586z\" />\n            </svg>{' '}\n        </span>\n    );\n};\nconst PaginationLinkPrev = function ({ hasPrevPage }) {\n    if (hasPrevPage) {\n        return (\n            <Link className={pagClasss} to={hasPrevPage}>\n                {' '}\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"-5 -5 24 24\"\n                    width=\"24\"\n                    fill=\"currentColor\"\n                >\n                    <path d=\"M3.414 7.657l3.95 3.95A1 1 0 0 1 5.95 13.02L.293 7.364a.997.997 0 0 1 0-1.414L5.95.293a1 1 0 1 1 1.414 1.414l-3.95 3.95H13a1 1 0 0 1 0 2H3.414z\" />\n                </svg>{' '}\n            </Link>\n        );\n    }\n    return (\n        <span className={disabledPag}>\n            {' '}\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"-5 -5 24 24\"\n                width=\"24\"\n                fill=\"currentColor\"\n            >\n                <path d=\"M3.414 7.657l3.95 3.95A1 1 0 0 1 5.95 13.02L.293 7.364a.997.997 0 0 1 0-1.414L5.95.293a1 1 0 1 1 1.414 1.414l-3.95 3.95H13a1 1 0 0 1 0 2H3.414z\" />\n            </svg>{' '}\n        </span>\n    );\n};\nconst DisableCurrentPage = function ({ currentPage, index, routePath }) {\n    if (currentPage === index) {\n        return <span className={activeClass}> {index} </span>;\n    }\n    return (\n        <AnchorLink className={pagClasss} to={routePath}>\n            {index}\n        </AnchorLink>\n    );\n};\n\nfunction getPath(path) {\n    return `${path}#courses-list`;\n}\n\nconst Pagination = function ({ numPages, currentPage, pathPrefix, indexPagePathPerfix }) {\n    const prevPage =\n        currentPage === 1\n            ? false\n            : currentPage === 2\n            ? getPath(indexPagePathPerfix || pathPrefix)\n            : getPath(`${pathPrefix}/${currentPage - 1}`);\n\n    const nextPage = currentPage < numPages ? getPath(`${pathPrefix}/${currentPage + 1}`) : false;\n    return (\n        <ul className=\"flex mt-14 justify-center space-x-2\">\n            <li>\n                <PaginationLinkPrev hasPrevPage={prevPage} />\n            </li>\n            {Array.from({ length: numPages }).map((_, i) => {\n                const index = i + 1;\n                return (\n                    <li key={index}>\n                        <DisableCurrentPage\n                            currentPage={currentPage}\n                            index={index}\n                            routePath={getPath(`${pathPrefix}/${index}`)}\n                        />\n                    </li>\n                );\n            })}\n            <li>\n                <PaginationLink hasNextPage={nextPage} />\n            </li>\n        </ul>\n    );\n};\n\nexport default Pagination;\n","/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport truncate from 'lodash/truncate';\nimport { isMobileOnly } from 'react-device-detect';\n\nconst MobileTemplate = function ({ thumbImage, title, createdAt, slug, description }) {\n    return (\n        <div className=\"bg-gray-800 shadow-lg rounded p-4\">\n            <figure className=\"w-full h-40 rounded overflow-hidden bg-center\">\n                <GatsbyImage className=\"h-full\" image={thumbImage} alt={title} />\n            </figure>\n            <div className=\"flex flex-col mt-4\" style={{ height: '180px' }}>\n                <p className=\"-mt-1 text-sm font-normal text-gray-400\">{createdAt}</p>\n                <h2 className=\"text-lg font-extrabold leading-snug text-gray-800 mb-3\">\n                    <Link className=\"text-green-400\" to={`/${slug}`}>\n                        {truncate(title, { length: 40 })}\n                    </Link>\n                </h2>\n                <p className=\"text-sm font-normal text-gray-300 flex-grow\">\n                    {truncate(description, { length: 140 })}\n                </p>\n                <Link to={`/${slug}`} className=\"flex group\">\n                    <span className=\"relative text-green-300\">\n                        <span\n                            className=\"\n\t\t\t\t\t\t\tgroup-hover:w-full\n\t\t\t\t\t\t\tabsolute\n\t\t\t\t\t\t\t-bottom-2\n\t\t\t\t\t\t\th-1\n\t\t\t\t\t\t\tw-0\n\t\t\t\t\t\t\tinline-block\n\t\t\t\t\t\t\tbg-green-400\n\t\t\t\t\t\t\tsite-fade\n\t\t\t\t\t\t\"\n                        />\n                        Read More\n                    </span>\n                    <svg\n                        className=\"inline-block ml-1 group-hover:ml-2 site-fade\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"-5 -5 24 24\"\n                        width=\"20\"\n                        fill=\"currentColor\"\n                    >\n                        <path d=\"M10.586 5.657l-3.95-3.95A1 1 0 0 1 8.05.293l5.657 5.657a.997.997 0 0 1 0 1.414L8.05 13.021a1 1 0 1 1-1.414-1.414l3.95-3.95H1a1 1 0 1 1 0-2h9.586z\" />\n                    </svg>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default function ({ image, title, description, slug, createdAt /* updatedAt */ }) {\n    const thumbImage = getImage(image);\n    return isMobileOnly ? (\n        <MobileTemplate\n            thumbImage={thumbImage}\n            title={title}\n            createdAt={createdAt}\n            slug={slug}\n            description={description}\n        />\n    ) : (\n        <div className=\"grid grid-cols-5 gap-6 bg-gray-800 shadow-xl rounded p-4\">\n            <figure className=\"w-full col-span-2 max-h-64 rounded overflow-hidden bg-center\">\n                <GatsbyImage className=\"h-full\" image={thumbImage} alt={title} />\n            </figure>\n            <div className=\"col-span-3 flex flex-col\" style={{ height: '260px' }}>\n                <p className=\"-mt-1 text-sm font-normal text-gray-400\">{createdAt}</p>\n                <h2 className=\"text-xl font-extrabold leading-snug text-gray-800 mb-3\">\n                    <Link className=\"text-green-400\" to={`/${slug}`}>\n                        {truncate(title, { length: 80 })}\n                    </Link>\n                </h2>\n                <p className=\"text-sm font-normal text-gray-300 flex-grow\">\n                    {truncate(description, { length: 240 })}\n                </p>\n                <Link to={`/${slug}`} className=\"flex group\">\n                    <span className=\"relative text-green-300\">\n                        <span className=\"group-hover:w-full absolute -bottom-2 h-1 inline-block bg-green-400 site-fade\" />\n                        Read More\n                    </span>\n                    <svg\n                        className=\"inline-block ml-1 group-hover:ml-2 site-fade\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"-5 -5 24 24\"\n                        width=\"20\"\n                        fill=\"currentColor\"\n                    >\n                        <path d=\"M10.586 5.657l-3.95-3.95A1 1 0 0 1 8.05.293l5.657 5.657a.997.997 0 0 1 0 1.414L8.05 13.021a1 1 0 1 1-1.414-1.414l3.95-3.95H1a1 1 0 1 1 0-2h9.586z\" />\n                    </svg>\n                </Link>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport PostFlat from 'components/courses/post-flat';\nimport Pagination from 'components/codemaster/pagination';\nimport { WithSideBar } from 'layouts/layout';\nimport SEO from 'components/codemaster/seo';\n\nconst CategoryTemplate = function ({ data, pageContext }) {\n    const courses = data.courses.edges;\n    const { category } = data;\n    const pathPrefix = `/categories/${category.routerPath}`;\n    return (\n        <WithSideBar>\n            <SEO title={`Courses By ${category.name}`} />\n            <div className=\"mt-10\" id=\"courses-list\">\n                <h2 className=\"main-page-title\">{category.name}</h2>\n                <div className=\"w-full\">\n                    <div className=\"flex flex-col space-y-10\">\n                        {courses.map(({ node }) => (\n                            <PostFlat {...node.course.frontmatter} slug={node.name} key={node.id} />\n                        ))}\n                    </div>\n                    <Pagination\n                        numPages={pageContext.numPages}\n                        currentPage={pageContext.currentPage}\n                        pathPrefix={pathPrefix}\n                    />\n                </div>\n            </div>\n        </WithSideBar>\n    );\n};\n\nexport const query = graphql`\n    query CoursesByCategoryQuery($skip: Int, $limit: Int, $category: String!) {\n        courses: allFile(\n            filter: {\n                sourceInstanceName: { eq: \"courses\" }\n                childMdx: {\n                    frontmatter: { categories: { elemMatch: { routerPath: { eq: $category } } } }\n                }\n            }\n            limit: $limit\n            skip: $skip\n            sort: { fields: childrenMdx___frontmatter___createdAt, order: DESC }\n        ) {\n            edges {\n                node {\n                    course: childMdx {\n                        frontmatter {\n                            title\n                            description\n                            tags\n                            image {\n                                childImageSharp {\n                                    gatsbyImageData(quality: 85, width: 400, placeholder: BLURRED)\n                                }\n                            }\n                            createdAt(formatString: \"MMMM Do YYYY\")\n                            updatedAt(formatString: \"MMMM Do YYYY\")\n                        }\n                    }\n                    name\n                    id\n                }\n            }\n        }\n        category: categoriesJson(routerPath: { eq: $category }) {\n            name\n            routerPath\n        }\n    }\n`;\n\nexport default CategoryTemplate;\n"],"names":["Object","defineProperty","exports","value","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","to","title","children","className","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","e","createElement","Link","propTypes","string","isRequired","bool","func","node","get","_AnchorLink","pagClasss","disabledPag","PaginationLink","hasNextPage","xmlns","viewBox","width","fill","d","PaginationLinkPrev","hasPrevPage","DisableCurrentPage","currentPage","index","routePath","getPath","path","numPages","pathPrefix","indexPagePathPerfix","prevPage","nextPage","Array","from","map","_","MobileTemplate","thumbImage","createdAt","slug","description","G","image","alt","style","height","truncate","getImage","isMobileOnly","data","pageContext","courses","edges","category","routerPath","name","id","course","frontmatter"],"sourceRoot":""}